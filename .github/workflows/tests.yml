name: Manual Run

on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'Select which tests to run (all, specs, api)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - specs
          - api
      browser:
        description: 'Browser project (chromium, firefox, webkit, all)'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - all
      tag:
        description: 'Run only tests with given @tag (leave empty for all tests)'
        required: false
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.47.0-focal

    strategy:
      fail-fast: false
      matrix:
        browser: ${{ fromJSON(github.event.inputs.browser == 'all' && '["chromium","firefox","webkit"]' || format('["{0}"]', github.event.inputs.browser)) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright Tests
        run: |
          mkdir -p test-results
          FOLDER="${{ github.event.inputs.folder }}"
          TAG="${{ github.event.inputs.tag }}"

          if [ "$FOLDER" = "all" ]; then
            TARGET="tests"
          else
            TARGET="tests/$FOLDER"
          fi
          
          if [ -z "$TAG" ]; then
            echo "Running all tests in $TARGET with ${{ matrix.browser }}"
            npx playwright test "$TARGET" --project="${{ matrix.browser }}"
          else
            echo "Running tests in $TARGET with ${{ matrix.browser }} and tag $TAG"
            npx playwright test "$TARGET" --project="${{ matrix.browser }}" --grep "$TAG"
          fi
        env:
          OPENLIB_EMAIL: ${{ secrets.OPENLIB_EMAIL }}
          OPENLIB_PASSWORD: ${{ secrets.OPENLIB_PASSWORD }}

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report

      - name: Upload traces and videos on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-${{ matrix.browser }}
          path: test-results
