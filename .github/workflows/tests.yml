name: Manual Run

on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'Select which tests to run (all, specs, api)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - specs
          - api
      browser:
        description: 'Browser project (chrome, msedge)'
        required: false
        default: 'chrome'
      tag:
        description: 'Run only tests with given @tag (leave empty for all tests)'
        required: false
        default: ''

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    env:
      OPENLIB_EMAIL: ${{ secrets.OPENLIB_EMAIL }}
      OPENLIB_PASSWORD: ${{ secrets.OPENLIB_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --registry=https://registry.npmjs.org/

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        run: |
          mkdir -p test-results
          FOLDER="${{ github.event.inputs.folder }}"
          BROWSER="${{ github.event.inputs.browser }}"
          TAG="${{ github.event.inputs.tag }}"

          if [ "$FOLDER" = "all" ]; then
            TARGET="tests"
          else
            TARGET="tests/$FOLDER"
          fi
          
          if [ -z "$TAG" ]; then
            echo "Running all tests in $TARGET with $BROWSER"
            npx playwright test "$TARGET" --project="$BROWSER" --reporter=html,junit --reporter-options outputFile=test-results/results.xml
          else
            echo "Running tests in $TARGET with $BROWSER and tag $TAG"
            npx playwright test "$TARGET" --project="$BROWSER" --grep "$TAG" --reporter=html,junit --reporter-options outputFile=test-results/results.xml
          fi

      - name: Add summary (total + by file)
        if: always()
        run: |
          echo "## OpenLibrary Test Results" >> $GITHUB_STEP_SUMMARY
          if [ -f test-results/results.xml ]; then
            total_passed=0
            total_failed=0
            total_skipped=0

            # iterace p≈ôes test suite
            while read -r line; do
              tests=$(echo "$line" | awk -F'"' '{print $10}')
              failures=$(echo "$line" | awk -F'"' '{print $12}')
              skipped=$(echo "$line" | awk -F'"' '{print $14}')
              passed=$((tests - failures - skipped))

              total_passed=$((total_passed + passed))
              total_failed=$((total_failed + failures))
              total_skipped=$((total_skipped + skipped))
            done < <(xmllint --xpath "//testsuite" test-results/results.xml | grep "<testsuite")

            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Total Results**" >> $GITHUB_STEP_SUMMARY
            echo "- Passed: $total_passed" >> $GITHUB_STEP_SUMMARY
            echo "- Failed: $total_failed" >> $GITHUB_STEP_SUMMARY
            echo "- Skipped: $total_skipped" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            echo "**Results by File**" >> $GITHUB_STEP_SUMMARY
            echo "| File | Passed | Failed | Skipped |" >> $GITHUB_STEP_SUMMARY
            echo "|------|--------|--------|---------|" >> $GITHUB_STEP_SUMMARY

            while read -r line; do
              file=$(echo "$line" | awk -F'"' '{print $2}')
              tests=$(echo "$line" | awk -F'"' '{print $10}')
              failures=$(echo "$line" | awk -F'"' '{print $12}')
              skipped=$(echo "$line" | awk -F'"' '{print $14}')
              passed=$((tests - failures - skipped))
              echo "| $file | $passed | $failures | $skipped |" >> $GITHUB_STEP_SUMMARY
            done < <(xmllint --xpath "//testsuite" test-results/results.xml | grep "<testsuite")

          else
            echo "No JUnit results found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload traces and videos on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: test-results
